# .github/workflows/ci-cd.yml
name: CI/CD Pipeline - Test, Build, Push and Deploy

on:
  push:
    branches: [ "main" ] # Roda apenas em pushes para a branch main

jobs:
  # 1. Job de Teste: Garante a qualidade do c贸digo
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}

  # 2. Job de Build e Push: Constr贸i a imagem Docker e envia para o Docker Hub
  build-and-push:
    runs-on: ubuntu-latest
    needs: test # S贸 roda se o job 'test' for bem-sucedido
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/tech-challenge-blog:latest # Ex: seunome/tech-challenge-blog:latest

  # 3. Job de Deploy: Avisa a Render para implantar a nova imagem
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push # S贸 roda se o job 'build-and-push' for bem-sucedido
    
    steps:
      - name: Trigger Render Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}